# SPDX-FileCopyrightText: Â© 2025 Phala Network <dstack@phala.network>
#
# SPDX-License-Identifier: Apache-2.0

name: KMS Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'kms-v*'
permissions:
  attestations: write
  id-token: write
  contents: write
  packages: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Parse version from tag
        run: |
          # Extract version from tag (e.g., kms-v1.2.3 -> 1.2.3)
          VERSION=${GITHUB_REF#refs/tags/kms-v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Parsed version: $VERSION"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Write GIT_REV
        run: git rev-parse HEAD > kms/dstack-app/builder/.GIT_REV

      - name: Get Git commit timestamps
        run: |
          echo "TIMESTAMP=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV
          echo "GIT_REV=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        env:
          SOURCE_DATE_EPOCH: ${{ env.TIMESTAMP }}
        with:
          context: kms/dstack-app/builder
          push: true
          tags: ${{ vars.DOCKERHUB_ORG }}/dstack-kms:${{ env.VERSION }}
          platforms: linux/amd64
          provenance: false
          build-args: |
            DSTACK_REV=${{ env.GIT_REV }}
            DSTACK_SRC_URL=${{ github.server_url }}/${{ github.repository }}
            SOURCE_DATE_EPOCH=${{ env.TIMESTAMP }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: "docker.io/${{ vars.DOCKERHUB_ORG }}/dstack-kms"
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: kms/auth-eth/package-lock.json

      - name: Install dependencies and compile contracts
        run: |
          cd kms/auth-eth
          npm ci
          npx hardhat compile

      - name: GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: "KMS Release v${{ env.VERSION }}"
          files: |
            kms/auth-eth/artifacts/contracts/DstackKms.sol/DstackKms.json
            kms/auth-eth/artifacts/contracts/DstackApp.sol/DstackApp.json
          body: |
            ## Docker Image Information

            **Image**: `docker.io/${{ vars.DOCKERHUB_ORG }}/dstack-kms:${{ env.VERSION }}`

            **Digest (SHA256)**: `${{ steps.build-and-push.outputs.digest }}`

            **Verification**: [Verify on Sigstore](https://search.sigstore.dev/?hash=${{ steps.build-and-push.outputs.digest }})

            ## Contract ABIs

            This release includes the compiled contract ABIs:
            - `DstackKms.json` - Main KMS contract ABI
            - `DstackApp.json` - Application contract ABI
